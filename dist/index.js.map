{"version":3,"sources":["../server/index.js"],"names":["require","xadesjs","WebCrypto","Application","setEngine","privateKey","publicKey","crypto","subtle","generateKey","name","modulusLength","publicExponent","Uint8Array","hash","then","keyPair","xmlString","SignXml","signedDocument","console","log","catch","e","error","keys","algorithm","Promise","resolve","xmlDoc","Parse","signedXml","SignedXml","Sign","keyValue","references","transforms","productionPlace","country","state","city","code","signingCertificate","signature","toString"],"mappings":";;AAAAA,QAAQ,qBAAR;AACAA,QAAQ,gBAAR;AACA;AACA,IAAIC,UAAUD,QAAQ,SAAR,CAAd;AACA,IAAIE,YAAYF,QAAQ,qBAAR,CAAhB;;AAEAC,QAAQE,WAAR,CAAoBC,SAApB,CAA8B,SAA9B,EAAyC,IAAIF,SAAJ,EAAzC;;AAEA;AACA,IAAIG,UAAJ,EAAgBC,SAAhB;AACAL,QAAQE,WAAR,CAAoBI,MAApB,CAA2BC,MAA3B,CAAkCC,WAAlC,CACI;AACIC,UAAM,mBADV;AAEIC,mBAAe,IAFnB,EAEyB;AACrBC,oBAAgB,IAAIC,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAHpB;AAIIC,UAAM,EAAEJ,MAAM,OAAR,EAJV,CAI6B;AAJ7B,CADJ,EAOI,KAPJ,EAOW;AACP,CAAC,MAAD,EAAS,QAAT,CARJ,CAQuB;AARvB,EAUKK,IAVL,CAUU,UAAUC,OAAV,EAAmB;AACrB;AACAX,iBAAaW,QAAQX,UAArB;AACAC,gBAAYU,QAAQV,SAApB;;AAEA;AACA,QAAIW,YAAY,qLAAhB;AACA,WAAOC,QAAQD,SAAR,EAAmBD,OAAnB,EAA4B,EAAEN,MAAM,mBAAR,EAA6BI,MAAM,EAAEJ,MAAM,OAAR,EAAnC,EAA5B,CAAP;AACH,CAlBL,EAmBKK,IAnBL,CAmBU,UAAUI,cAAV,EAA0B;AAC5BC,YAAQC,GAAR,CAAY,sBAAZ,EAAoCF,cAApC;AACH,CArBL,EAsBKG,KAtBL,CAsBW,UAAUC,CAAV,EAAa;AAChBH,YAAQI,KAAR,CAAcD,CAAd;AACH,CAxBL;;AA2BA,SAASL,OAAT,CAAiBD,SAAjB,EAA4BQ,IAA5B,EAAkCC,SAAlC,EAA6C;AACzC,WAAOC,QAAQC,OAAR,GACFb,IADE,CACG,YAAM;AACR,YAAIc,SAAS5B,QAAQ6B,KAAR,CAAcb,SAAd,CAAb;AACA,YAAIc,YAAY,IAAI9B,QAAQ+B,SAAZ,EAAhB;;AAEA,eAAOD,UAAUE,IAAV,EAA8B;AACjCP,iBADG,EACqC;AACxCD,aAAKpB,UAFF,EAEqC;AACxCwB,cAHG,EAGqC;AACxC,UAAwC;AACpCK,sBAAUT,KAAKnB,SADnB;AAEI6B,wBAAY,CACR,EAAErB,MAAM,SAAR,EAAmBsB,YAAY,CAAC,WAAD,CAA/B,EADQ,CAFhB;AAKIC,6BAAiB;AACbC,yBAAS,SADI;AAEbC,uBAAO,OAFM;AAGbC,sBAAM,MAHO;AAIbC,sBAAM;AAJO,aALrB;AAWIC,gCAAoB;AAXxB,SAJG,CAAP;AAiBC,KAtBF,EAuBE3B,IAvBF,CAuBO;AAAA,eAAa4B,UAAUC,QAAV,EAAb;AAAA,KAvBP,CAAP;AAwBH","file":"index.js","sourcesContent":["require(\"babel-core/register\");\r\nrequire(\"babel-polyfill\");\r\n//==========================================\r\nvar xadesjs = require(\"xadesjs\");\r\nvar WebCrypto = require(\"node-webcrypto-ossl\");\r\n\r\nxadesjs.Application.setEngine(\"OpenSSL\", new WebCrypto());\r\n\r\n// Generate RSA key pair\r\nvar privateKey, publicKey;\r\nxadesjs.Application.crypto.subtle.generateKey(\r\n    {\r\n        name: \"RSASSA-PKCS1-v1_5\",\r\n        modulusLength: 1024, //can be 1024, 2048, or 4096,\r\n        publicExponent: new Uint8Array([1, 0, 1]),\r\n        hash: { name: \"SHA-1\" }, //can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\r\n    },\r\n    false, //whether the key is extractable (i.e. can be used in exportKey)\r\n    [\"sign\", \"verify\"] //can be any combination of \"sign\" and \"verify\"\r\n)\r\n    .then(function (keyPair) {\r\n        // Push ganerated keys to global variable\r\n        privateKey = keyPair.privateKey;\r\n        publicKey = keyPair.publicKey;\r\n\r\n        // Call sign function\r\n        var xmlString = '<player bats=\"left\" id=\"10012\" throws=\"right\">\\n\\t<!-- Here\\'s a comment -->\\n\\t<name>Alfonso Soriano</name>\\n\\t<position>2B</position>\\n\\t<team>New York Yankees</team>\\n</player>';\r\n        return SignXml(xmlString, keyPair, { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-1\" } });\r\n    })\r\n    .then(function (signedDocument) {\r\n        console.log(\"Signed document:\\n\\n\", signedDocument);\r\n    })\r\n    .catch(function (e) {\r\n        console.error(e);\r\n    });\r\n\r\n\r\nfunction SignXml(xmlString, keys, algorithm) {\r\n    return Promise.resolve()\r\n        .then(() => {\r\n            var xmlDoc = xadesjs.Parse(xmlString);\r\n            var signedXml = new xadesjs.SignedXml();\r\n\r\n            return signedXml.Sign(               // Signing document\r\n                algorithm,                              // algorithm\r\n                keys.privateKey,                        // key\r\n                xmlDoc,                                 // document\r\n                {                                       // options\r\n                    keyValue: keys.publicKey,\r\n                    references: [\r\n                        { hash: \"SHA-256\", transforms: [\"enveloped\"] }\r\n                    ],\r\n                    productionPlace: {\r\n                        country: \"Country\",\r\n                        state: \"State\",\r\n                        city: \"City\",\r\n                        code: \"Code\",\r\n                    },\r\n                    signingCertificate: \"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\"\r\n                })\r\n            })\r\n            .then(signature => signature.toString());\r\n}\r\n"]}